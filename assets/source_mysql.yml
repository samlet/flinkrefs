version: "1"

tables:
    addresses:
        create: |
            CREATE TABLE addresses (
              id INT,
              user_id INT,
              email_address STRING,
              PRIMARY KEY (id) NOT ENFORCED
            ) WITH (
                'connector' = 'jdbc',
                'url' = 'jdbc:mysql://localhost:3306/bot',
                'username' = 'root',
                'password' = 'root',
                'table-name' = 'addresses'
            )

    user_behavior:
        create: |
            CREATE TABLE MyUserTable (
              id BIGINT,
              name STRING,
              age INT,
              status BOOLEAN,
              PRIMARY KEY (id) NOT ENFORCED
            ) WITH (
               'connector' = 'jdbc',
               'url' = 'jdbc:mysql://localhost:3306/mydatabase',
               'table-name' = 'users'
            )

        query:
            all:
                sql: SELECT id, name, age, status FROM MyUserTable;
            # JDBC 表在时态表关联中作为维表
            dimension_table:
                sql: |
                    SELECT * FROM myTopic
                    LEFT JOIN MyUserTable FOR SYSTEM_TIME AS OF myTopic.proctime
                    ON myTopic.key = MyUserTable.id;
        sink:
            # 从另一张表 "source" 将数据写入到 JDBC 表中
            insert_from:
                vars: [source]
                sql: |
                    INSERT INTO MyUserTable
                    SELECT id, name, age, status FROM {{source}};

